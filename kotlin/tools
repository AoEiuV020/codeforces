#!/usr/bin/env bash
set -e
new() {
test -z "$1" && exit 1
question=$1
echo "p$question.AnswerTest.t$question" > method
if ! mkdir src/main/kotlin/p$question/ &>/dev/null ;then
echo src/main/kotlin/p$question/solution.kt
echo src/main/kotlin/p$question/solution.kt >file
echo src/test/kotlin/p$question/AnswerTest.kt
echo src/test/kotlin/p$question/AnswerTest.kt >>file
exit 0
fi

echo src/main/kotlin/p$question/solution.kt
echo src/main/kotlin/p$question/solution.kt >file
cat >src/main/kotlin/p$question/solution.kt <<EOF
package p$question;

/**
 * Created by AoEiuV020 on $(date '+%Y/%m/%d').
 */
fun main(vararg args: String) {
}
EOF
mkdir src/test/kotlin/p$question/
echo src/test/kotlin/p$question/AnswerTest.kt
echo src/test/kotlin/p$question/AnswerTest.kt >>file
cat >src/test/kotlin/p$question/AnswerTest.kt <<EOF
package p$question;

import org.junit.Test
import kotlin.test.*
import base.BaseTest

/**
* Created by AoEiuV020 on $(date '+%Y/%m/%d').
*/
class AnswerTest: BaseTest() {
    @Test
    fun t$question() {
        input("""
        """)
        main()
        assertEquals("", output)
    }
}
EOF
}
code() {
sed 1d `head -1 file`
}
t() {
./gradlew test --tests `cat method` $1
}
case "$1" in
    "n" )
        new $2
        ;;
    "c" )
        code
        ;;
    "t" )
        t $2
        ;;
esac
